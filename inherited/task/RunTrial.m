function expdata = RunTrial(expdata, numTrial)

%**************************************************************************
%       CENTRAL FIXATION SCREEN
%**************************************************************************
expdata.ITI(numTrial) = expdata.fixedITI(numTrial) + ...
    expdata.currTrialRemainder;
Screen('FillRect', expdata.windowPtr, expdata.colorBackground);
Screen('TextSize', expdata.windowPtr, expdata.crossTextSize);
DrawFormattedText(expdata.windowPtr, '+', 'center', 'center', ...
    expdata.colorCross);
onsetTime = Screen('Flip', expdata.windowPtr);
expdata.onsetCross(numTrial) = onsetTime - expdata.startTime;
WaitSecs(expdata.ITI(numTrial));


%**************************************************************************
%       FRACTALS VS. LOTTERIES PROBABILITIES SCREEN
%**************************************************************************
Screen('FillRect', expdata.windowPtr, expdata.colorBackground);
Screen('TextSize', expdata.windowPtr, expdata.probabilityTextSize);
text = sprintf('%d%%', expdata.probFractalDraw(numTrial) * 100);
DrawFormattedText(expdata.windowPtr, text, 'center', ...
    expdata.screenUpLeft(2), expdata.colorText);
text = sprintf('%d%%', 100 - (expdata.probFractalDraw(numTrial) * 100));
DrawFormattedText(expdata.windowPtr, text, 'center', ...
    expdata.screenLowLeft(2), expdata.colorText);
onsetTime = Screen('Flip', expdata.windowPtr);
expdata.onsetProbabilities(numTrial) = onsetTime - expdata.startTime;
WaitSecs(expdata.timeProbPresentation);


%**************************************************************************
%       DECISION SCREEN
%**************************************************************************
Screen('FillRect', expdata.windowPtr, expdata.colorBackground);

% Show line dividing screen.
Screen('DrawLine', expdata.windowPtr, expdata.colorLine, ...
    expdata.screenCenter(1), expdata.windowRect(2), ...
    expdata.screenCenter(1), expdata.windowRect(4), expdata.lineWidth);

% Show fractals.
Screen('DrawTextures', expdata.windowPtr, ...
    expdata.imageFractalLeft, [], ...
    [expdata.screenUpLeft(1) - (expdata.choiceSize / 2), ...
    expdata.screenUpLeft(2) - (expdata.choiceSize / 2), ...
    expdata.screenUpLeft(1) + (expdata.choiceSize / 2), ...
    expdata.screenUpLeft(2) + (expdata.choiceSize / 2)]);
Screen('DrawTextures', expdata.windowPtr, ...
    expdata.imageFractalRight, [], ...
    [expdata.screenUpRight(1) - (expdata.choiceSize / 2), ...
    expdata.screenUpRight(2) - (expdata.choiceSize / 2), ...
    expdata.screenUpRight(1) + (expdata.choiceSize / 2), ...
    expdata.screenUpRight(2) + (expdata.choiceSize / 2)]);

% Show lottery boxes.
Screen('FrameRect', expdata.windowPtr, expdata.colorBox, ...
    [expdata.screenLowLeft(1) - (expdata.choiceSize / 2), ...
    expdata.screenLowLeft(2) - (expdata.choiceSize / 2), ...
    expdata.screenLowLeft(1) + (expdata.choiceSize / 2), ...
    expdata.screenLowLeft(2) + (expdata.choiceSize / 2)], ...
    expdata.lineWidth);
Screen('FrameRect', expdata.windowPtr, expdata.colorBox, ...
    [expdata.screenLowRight(1) - (expdata.choiceSize / 2), ...
    expdata.screenLowRight(2) - (expdata.choiceSize / 2), ...
    expdata.screenLowRight(1) + (expdata.choiceSize / 2), ...
    expdata.screenLowRight(2) + (expdata.choiceSize / 2)], ...
    expdata.lineWidth);

% Show lotteries.
Screen('FillArc', expdata.windowPtr, expdata.colorPieChart, ...
    [expdata.screenLowLeft(1) - 45, expdata.screenLowLeft(2) - 80, ...
    expdata.screenLowLeft(1) + 45, expdata.screenLowLeft(2) + 10], ...
    0, ConvertProbabilityToPieChartAngle(expdata.lotteryProb(numTrial)));
Screen('TextSize', expdata.windowPtr, expdata.lotteryTextSize);
text = sprintf('$%.2f', expdata.lotteryValue(numTrial));
DrawFormattedText(expdata.windowPtr, text, ...
    expdata.screenLowLeft(1) - 60, expdata.screenLowLeft(2) + 20, ...
    expdata.colorText);
DrawFormattedText(expdata.windowPtr, 'REF', ...
    expdata.screenLowRight(1) - 50, expdata.screenLowRight(2) - 30, ...
    expdata.colorText);

onsetTime = Screen('Flip', expdata.windowPtr, 0, 1);
expdata.onsetStimulus(numTrial) = onsetTime - expdata.startTime;

[parResponded, responseTime, reactionTime, keyCode] = ...
    KbWaitForKeys(expdata.choiceKeys, expdata.maxRT);
if parResponded
    expdata.responded(numTrial) = 1;
    expdata.responseTime(numTrial) = responseTime;
    expdata.reactionTime(numTrial) = reactionTime;
    expdata.currTrialRemainder = expdata.maxRT - reactionTime;
    if keyCode(expdata.keyLeft)
        expdata.choiceLeft(numTrial) = 1;
    elseif keyCode(expdata.keyRight)
        expdata.choiceLeft(numTrial) = 0;
    end
else
    expdata.responded(numTrial) = 0;
    expdata.responseTime(numTrial) = -1;
    expdata.reactionTime(numTrial) = -1;
    expdata.choiceLeft(numTrial) = -1;
    expdata.currTrialRemainder = 0;
end


%**************************************************************************
%       REWARD SCREEN
%**************************************************************************
if expdata.responded(numTrial) == 1
    Screen('FillRect', expdata.windowPtr, expdata.colorBackground);

    % Show fractals.
    Screen('DrawTextures', expdata.windowPtr, ...
        expdata.imageFractalLeft, [], ...
        [expdata.screenUpLeft(1) - (expdata.choiceSize / 2), ...
        expdata.screenUpLeft(2) - (expdata.choiceSize / 2), ...
        expdata.screenUpLeft(1) + (expdata.choiceSize / 2), ...
        expdata.screenUpLeft(2) + (expdata.choiceSize / 2)]);
    Screen('DrawTextures', expdata.windowPtr, ...
        expdata.imageFractalRight, [], ...
        [expdata.screenUpRight(1) - (expdata.choiceSize / 2), ...
        expdata.screenUpRight(2) - (expdata.choiceSize / 2), ...
        expdata.screenUpRight(1) + (expdata.choiceSize / 2), ...
        expdata.screenUpRight(2) + (expdata.choiceSize / 2)]);

    % Show lottery boxes.
    Screen('FrameRect', expdata.windowPtr, expdata.colorBox, ...
        [expdata.screenLowLeft(1) - (expdata.choiceSize / 2), ...
        expdata.screenLowLeft(2) - (expdata.choiceSize / 2), ...
        expdata.screenLowLeft(1) + (expdata.choiceSize / 2), ...
        expdata.screenLowLeft(2) + (expdata.choiceSize / 2)], ...
        expdata.lineWidth);
    Screen('FrameRect', expdata.windowPtr, expdata.colorBox, ...
        [expdata.screenLowRight(1) - (expdata.choiceSize / 2), ...
        expdata.screenLowRight(2) - (expdata.choiceSize / 2), ...
        expdata.screenLowRight(1) + (expdata.choiceSize / 2), ...
        expdata.screenLowRight(2) + (expdata.choiceSize / 2)], ...
        expdata.lineWidth);

    % Show lotteries.
    Screen('FillArc', expdata.windowPtr, expdata.colorPieChart, ...
        [expdata.screenLowLeft(1) - 45, ...
         expdata.screenLowLeft(2) - 80, ...
         expdata.screenLowLeft(1) + 45, ...
         expdata.screenLowLeft(2) + 10], 0, ...
         ConvertProbabilityToPieChartAngle(expdata.lotteryProb(numTrial)));
    Screen('TextSize', expdata.windowPtr, expdata.lotteryTextSize);
    text = sprintf('$%.2f', expdata.lotteryValue(numTrial));
    DrawFormattedText(expdata.windowPtr, text, ...
        expdata.screenLowLeft(1) - 60, expdata.screenLowLeft(2) + 20, ...
        expdata.colorText);
    DrawFormattedText(expdata.windowPtr, 'REF', ...
        expdata.screenLowRight(1) - 50, expdata.screenLowRight(2) - 30, ...
        expdata.colorText);

    % Draw left fractal reward.
    if rand <= expdata.fractalLeftProb(numTrial)
        expdata.leftFractalReward(numTrial) = expdata.referenceValue;
        imageRewardLeft = expdata.imageRewardOne;
    else
        expdata.leftFractalReward(numTrial) = 0;
        imageRewardLeft = expdata.imageRewardZero;
    end
    % Draw right fractal reward.
    if rand <= expdata.fractalRightProb(numTrial)
        expdata.rightFractalReward(numTrial) = expdata.referenceValue;
        imageRewardRight = expdata.imageRewardOne;
    else
        expdata.rightFractalReward(numTrial) = 0;
        imageRewardRight = expdata.imageRewardZero;
    end

    % Show left fractal reward.
    Screen('DrawTextures', expdata.windowPtr, ...
        imageRewardLeft, [], ...
        [expdata.screenUpLeft(1) - 44.75, ...
        expdata.screenUpLeft(2) - 46, ...
        expdata.screenUpLeft(1) + 44.75, ...
        expdata.screenUpLeft(2) + 46]);
    % Show right fractal reward.
    Screen('DrawTextures', expdata.windowPtr, ...
        imageRewardRight, [], ...
        [expdata.screenUpRight(1) - 44.75, ...
        expdata.screenUpRight(2) - 46, ...
        expdata.screenUpRight(1) + 44.75, ...
        expdata.screenUpRight(2) + 46]);

    if rand <= expdata.probFractalDraw(numTrial)
        expdata.fractalDraw(numTrial) = 1;
        if expdata.choiceLeft(numTrial)
            % Show red box around left fractal.
            Screen('FrameRect', expdata.windowPtr, ...
                expdata.colorChoiceBox, ...
                [expdata.screenUpLeft(1) - (expdata.choiceSize / 2), ...
                expdata.screenUpLeft(2) - (expdata.choiceSize / 2), ...
                expdata.screenUpLeft(1) + (expdata.choiceSize / 2), ...
                expdata.screenUpLeft(2) + (expdata.choiceSize / 2)], ...
                expdata.choiceBoxWidth);
            % Trial reward is the left fractal reward.
            expdata.reward(numTrial) = expdata.leftFractalReward(numTrial);
        else
            % Show red box around right fractal.
            Screen('FrameRect', expdata.windowPtr, ...
                expdata.colorChoiceBox, ...
                [expdata.screenUpRight(1) - (expdata.choiceSize / 2), ...
                expdata.screenUpRight(2) - (expdata.choiceSize / 2), ...
                expdata.screenUpRight(1) + (expdata.choiceSize / 2), ...
                expdata.screenUpRight(2) + (expdata.choiceSize / 2)], ...
                expdata.choiceBoxWidth);
            % Trial reward is the right fractal reward.
            expdata.reward(numTrial) = ...
                expdata.rightFractalReward(numTrial);
        end
    else
        expdata.fractalDraw(numTrial) = 0;
        if expdata.choiceLeft(numTrial)
            % Show red box around left lottery.
            Screen('FrameRect', expdata.windowPtr, ...
                expdata.colorChoiceBox, ...
                [expdata.screenLowLeft(1) - (expdata.choiceSize / 2), ...
                expdata.screenLowLeft(2) - (expdata.choiceSize / 2), ...
                expdata.screenLowLeft(1) + (expdata.choiceSize / 2), ...
                expdata.screenLowLeft(2) + (expdata.choiceSize / 2)], ...
                expdata.choiceBoxWidth);
            % Draw left lottery.
            if rand <= expdata.lotteryProb(numTrial)
                expdata.reward(numTrial) = expdata.lotteryValue(numTrial);
            else
                expdata.reward(numTrial) = 0;
            end
        else
            % Show red box around right lottery.
            Screen('FrameRect', expdata.windowPtr, ...
                expdata.colorChoiceBox, ...
                [expdata.screenLowRight(1) - (expdata.choiceSize / 2), ...
                expdata.screenLowRight(2) - (expdata.choiceSize / 2), ...
                expdata.screenLowRight(1) + (expdata.choiceSize / 2), ...
                expdata.screenLowRight(2) + (expdata.choiceSize / 2)], ...
                expdata.choiceBoxWidth);
            % Draw right lottery.
            if rand <= expdata.referenceProb
                expdata.reward(numTrial) = expdata.referenceValue;
            else
                expdata.reward(numTrial) = 0;
            end
        end
    end

    % Display the outcome.
    Screen('TextSize', expdata.windowPtr, expdata.rewardTextSize);
    text = sprintf('$%.2f', expdata.reward(numTrial));
    DrawFormattedText(expdata.windowPtr, text, 'center', 'center', ...
        expdata.colorReward);
    onsetTime = Screen('Flip', expdata.windowPtr);
    expdata.onsetReward(numTrial) = onsetTime - expdata.startTime;
    WaitSecs(expdata.timeRewardScreen);
else
    % No response recorded for this trial.
    expdata.reward(numTrial) = 0;
    expdata.fractalDraw(numTrial) = -1;
    expdata.leftFractalReward(numTrial) = -1;
    expdata.rightFractalReward(numTrial) = -1;
    Screen('FillRect', expdata.windowPtr, expdata.colorBackground);
    Screen('TextSize', expdata.windowPtr, expdata.messageTextSize);
    DrawFormattedText(expdata.windowPtr, 'No response recorded!', ...
        'center', 'center', expdata.colorText);
    onsetTime = Screen('Flip', expdata.windowPtr);
    expdata.onsetReward(numTrial) = onsetTime - expdata.startTime;
    WaitSecs(expdata.timeRewardScreen);
end
end
